autotriggers_gui

autotriggers_gui to graficzna aplikacja desktopowa napisana w C++ z użyciem Qt6, przeznaczona do monitorowania zdarzeń podłączenia urządzeń USB w systemach Linux i automatycznego uruchamiania zdefiniowanych skryptów (autotriggerów) w odpowiedzi na wykrycie konkretnej pary VID:PID (Vendor ID: Product ID).

Aplikacja wykorzystuje bibliotekę libudev do niskopoziomowego monitorowania jądra systemu pod kątem zdarzeń związanych z urządzeniami.

Główne Funkcjonalności

    Monitoring USB (libudev): Dedykowany moduł UsbMonitor działa w osobnym wątku, nasłuchując zdarzeń dodania (add) urządzeń USB do systemu za pośrednictwem udev_monitor.

    Wykonywanie Akcji: Po wykryciu urządzenia pasującego do zdefiniowanej reguły, aplikacja uruchamia zewnętrzny skrypt za pomocą QProcess::startDetached().

    Reguły Triggerów: Umożliwia definiowanie reguł dla każdego VID:PID, zawierających:

        Ścieżkę do skryptu (action_script).

        Argumenty przekazywane do skryptu (action_args).

        Opóźnienie w sekundach (delay_sec) przed wykonaniem akcji (realizowane przez QThread::sleep).

        Opcjonalną flagę wymagania autoryzacji (auth_required), która jest przechowywana, ale obecnie (na podstawie kodu) nie jest aktywnie wykorzystywana do implementacji autoryzacji.

    Zarządzanie Konfiguracją: Reguły są przechowywane w pliku JSON (domyślnie triggers.json). Aplikacja umożliwia wczytywanie i zapisywanie tej konfiguracji poprzez interfejs graficzny. Do obsługi JSON używana jest biblioteka nlohmann/json.

    Sprawdzanie Istniejących Urządzeń: Funkcja pozwala na jednorazowe przeskanowanie wszystkich aktualnie podłączonych urządzeń USB i wyzwolenie dla nich odpowiednich akcji.

    GUI (Qt6): Intuicyjny interfejs graficzny do zarządzania regułami (za pomocą QTableView i TriggerModel), kontroli monitoringu oraz podglądu logów systemowych i statusu.

Struktura Pliku Konfiguracyjnego (JSON)

Reguły są grupowane w pliku konfiguracyjnym według klucza VID:PID. Każdy klucz zawiera tablicę (listę) akcji do wykonania dla danego urządzenia.

Przykład pliku triggers.json:
JSON

{
  "1234:abcd": [
    {
      "action_args": ["-p", "/mnt/dane"],
      "action_script": "/home/user/autmount.sh",
      "auth_required": false,
      "delay_sec": 5
    }
  ],
  "04f2:0120": [
    {
      "action_args": [],
      "action_script": "/usr/local/bin/run_webcam_app",
      "auth_required": true,
      "delay_sec": 0
    }
  ]
}

Wymagania i Zależności

Wymagania Systemowe

    System Operacyjny: Linux (wymagana biblioteka libudev).

Zależności (do Kompilacji)

    Qt 6.x (wymagany moduł Widgets).

    CMake (wersja 3.16 lub nowsza).

    libudev (biblioteki deweloperskie do libudev, weryfikowane przez PkgConfig).

    nlohmann/json (biblioteka nagłówkowa do JSON).

Budowanie Projektu (Kompilacja)

Projekt wykorzystuje standardowy proces budowania oparty na CMake.

    Utwórz katalog kompilacji:
    Bash

mkdir build
cd build

Skonfiguruj projekt:
Bash

cmake ..

(Upewnij się, że system odnajdzie wszystkie wymagane pakiety Qt6 i libudev).

Zbuduj aplikację:
Bash

    cmake --build .

Po pomyślnej kompilacji, plik wykonywalny autotriggers_gui znajdzie się w katalogu build.

Konfiguracja CMake (CMakeLists.txt)

Plik CMakeLists.txt definiuje:

    Wymóg C++17.

    Włączenie automatycznego przetwarzania Qt (CMAKE_AUTOMOC, CMAKE_AUTORCC, CMAKE_AUTOUIC).

    Wymaga znalezienia Qt6::Widgets oraz modułu libudev za pomocą PkgConfig.

    Łączy binarny plik wykonywalny z bibliotekami Qt6::Widgets i libudev.
